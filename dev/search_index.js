var documenterSearchIndex = {"docs":
[{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Tesselation Example","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"You can generate a tessellation using the NeperStructureGenerator.tesselate function, providing it with specific parameters like number of cells, dimension, periodicity, and more. The default tesselation has the following parameters:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"const tesselation_defaults = Dict(\n    \"id\" => 1, # used as seed\n    \"n\" => 10,\n    \"dim\" => 2,\n    \"reg\" => 0,\n    \"periodicity\" => \"none\"\n)\n````\nIn order to generate a custom tesselation, create a new dictionary and pass it to `tesselate()`. Below is an example of how to generate a tessellation with 100 cells in 3D:\n","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia  using NeperStructureGenerator","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"tesselation_params = Dict(\"n\" => 100, \"dim\" => 3, \"periodicity\" => \"none\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"NeperStructureGenerator.tesselate(tesselation_params)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"\nThis will generate a 3D tessellation with 100 cells.\n\n2. Meshing Example\n\nOnce you have a tessellation, you can generate a mesh using the NeperStructureGenerator.mesh function.  The default mesh has the following parameters:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia  const meshing_defaults = Dict( \"cl\" => 0.5, \"order\" => 1, \"elttype\" => \"tet\" )","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"\nIn order to generate a custom mesh, create a new dictionary and pass it to `mesh()`. The following example shows how to create a custom mesh from the generated tessellation:\n","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia using NeperStructureGenerator","category":"page"},{"location":"examples/#Define-custom-meshing-parameters","page":"Examples","title":"Define custom meshing parameters","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"meshing_params = Dict(\"cl\" => 0.1, \"order\" => 1, \"elttype\" => \"tet\")","category":"page"},{"location":"examples/#Create-mesh-from-previously-generated-tessellation","page":"Examples","title":"Create mesh from previously generated tessellation","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"NeperStructureGenerator.mesh(meshing_params)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This will produce a mesh with tetrahedral elements and a characteristic length of 0.1.\n\n3. Visualize Tesselation Example\n\nTo visualize the generated tessellation, use the `NeperStructureGenerator.visualize_tesselation()` function. Here's an example:\n","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia using NeperStructureGenerator","category":"page"},{"location":"examples/#Visualize-the-tessellation-from-the-directory","page":"Examples","title":"Visualize the tessellation from the directory","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"NeperStructureGenerator.visualize_tesselation(\"path/to/output/dir\", \"path/to/tessellation\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This command will create a visualization of the tessellation stored in the specified directory.\n\n4. Visualize Mesh Example\n\nTo visualize a mesh, the `NeperStructureGenerator.visualize_mesh()` function can be used. Here's an example:\n","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia using NeperStructureGenerator","category":"page"},{"location":"examples/#Visualize-the-mesh-from-the-directory","page":"Examples","title":"Visualize the mesh from the directory","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"NeperStructureGenerator.visualize_mesh(\"path/to/output/dir\", \"path/to/mesh\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This will display the mesh located in the provided path.\n\nAlternatively, provide a mesh name:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia using NeperStructureGenerator","category":"page"},{"location":"examples/#Visualize-the-mesh-from-the-directory-2","page":"Examples","title":"Visualize the mesh from the directory","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"NeperStructureGenerator.visualizemesh(\"path/to/output/dir\", \"path/to/tesselation/dir\", \"meshname\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This will display the mesh with the corresponding name in the tesselation directory\n\n5. Visualize Directory Example\n\nYou can visualize all tessellations and meshes in a specific directory using the `NeperStructureGenerator.visualize_directory()` function. Here is how you can visualize all files in a directory:\n","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia using NeperStructureGenerator","category":"page"},{"location":"examples/#Visualize-all-structures-in-a-directory","page":"Examples","title":"Visualize all structures in a directory","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"NeperStructureGenerator.visualize_directory(\"path/to/output/directory\", \"path/to/directory/to/be/visualized\") ``` This command will automatically visualize all available tessellations and meshes found in the specified directory.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = NeperStructureGenerator","category":"page"},{"location":"#NeperStructureGenerator","page":"Home","title":"NeperStructureGenerator","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for NeperStructureGenerator.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Here is a link to the Examples.","category":"page"},{"location":"devdocs/","page":"Internals","title":"Internals","text":"CurrentModule = NeperStructureGenerator","category":"page"},{"location":"devdocs/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"devdocs/","page":"Internals","title":"Internals","text":"NeperStructureGenerator.check_dicts_equal\nNeperStructureGenerator.check_mesh_args\nNeperStructureGenerator.create_cmdargs\nNeperStructureGenerator.create_toml_data\nNeperStructureGenerator.generate_directory_name\nNeperStructureGenerator.name_from_dict\nNeperStructureGenerator.generate_mesh_name","category":"page"},{"location":"devdocs/#NeperStructureGenerator.check_dicts_equal","page":"Internals","title":"NeperStructureGenerator.check_dicts_equal","text":"check_dicts_equal(dict::Dict, new_dict::Dict)\n\nReturns true if the values of the keys in new_dict match the values of the keys  in dict\n\n\n\n\n\n","category":"function"},{"location":"devdocs/#NeperStructureGenerator.check_mesh_args","page":"Internals","title":"NeperStructureGenerator.check_mesh_args","text":"check_mesh_args(file_path::String, new_mesh_dict::Dict, force::Bool = false)\n\nCheck if there already is a mesh with the same name and or same arguments.\n\nIf the force flag is set to true, overwriting of meshes is enabled.\n\nArguments\n\nfile_path::String: Path to the mesh file.\nnew_mesh_dictdict::Dict: Contains the parameters of the new mesh.\nforce::Bool=false: Enables and disables overwriting of meshes.\n\n\n\n\n\n","category":"function"},{"location":"devdocs/#NeperStructureGenerator.create_cmdargs","page":"Internals","title":"NeperStructureGenerator.create_cmdargs","text":"create_cmdargs(dict::Dict)\n\nCreate a string with the format \"-<key1> <value1> -<key2> <value2> ...\". The keys are not sorted.\n\n\n\n\n\n","category":"function"},{"location":"devdocs/#NeperStructureGenerator.create_toml_data","page":"Internals","title":"NeperStructureGenerator.create_toml_data","text":"create_toml_data(name::String, dict::Dict, file_path::String; custom::Bool = false)\n\nCreate or update a TOML file with mesh data.\n\nIf the custom flag is set to true, the name parameter is used as the mesh name.  Otherwise, a mesh name based on the number of existing entries is generated.  The function saves the tesselation information in the \"TESSELATION\" section and the  mesh information in the \"MESHES\" section of the TOML file. The TOML file is located in  the same directory as the provided file_path.\n\nArguments\n\nname::String: Provides the name of the tesselation dictionary in the toml file for   tesselation and the path to the mesh file to infer the name for meshing.\ndict::Dict: Contains information about the tesselation or meshing parameters.\nfile_path::String: Path to the tesselation or mesh file.\ncustom::Bool=false: Is set to true if a custom mesh name was given.\n\n\n\n\n\n","category":"function"},{"location":"devdocs/#NeperStructureGenerator.generate_directory_name","page":"Internals","title":"NeperStructureGenerator.generate_directory_name","text":"generate_directory_name(parent_folder::String, tesselation_settings::Dict)\n\nArgs:     parentfolder (String): Root directory     tesselationsettings (Dict): Dictionary containing the tesselation parameters\n\n\n\n\n\n","category":"function"},{"location":"devdocs/#NeperStructureGenerator.name_from_dict","page":"Internals","title":"NeperStructureGenerator.name_from_dict","text":"name_from_dict(d::Dict)\n\nGenerate a string with the format \"<key1><value1>_<key2><value2>_...\" where the keys are sorted.\n\n\n\n\n\n","category":"function"},{"location":"devdocs/#NeperStructureGenerator.generate_mesh_name","page":"Internals","title":"NeperStructureGenerator.generate_mesh_name","text":"Generates a mesh name based on the number of existing meshes.\n\nArguments\n\nparent_folder::String: The path to the parent folder containing the input.toml file.\n\nReturns\n\nString: A generated mesh name in the format \"Mesh_<number>\", where <number> is the count of existing meshes plus one.\n\nIf a custom mesh name is not provided, this function counts the number of existing meshes and creates a new mesh name accordingly.\n\n\n\n\n\n","category":"function"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = NeperStructureGenerator","category":"page"},{"location":"API/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"NeperStructureGenerator.mesh\nNeperStructureGenerator.tesselate\nNeperStructureGenerator.visualize_directory\nNeperStructureGenerator.visualize_mesh\nNeperStructureGenerator.visualize_tesselation","category":"page"},{"location":"API/#NeperStructureGenerator.mesh","page":"API","title":"NeperStructureGenerator.mesh","text":"mesh(; tess_path::String = Nothing, meshing::Dict = Dict(), \ncustom_mesh_name::String = Nothing, force::Bool = false)\n\nCreates and saves a mesh for the the provided tesselation file according to the meshing  parameters. Returns the path to the mesh file.\n\nIf the force flag is set to true, overwriting of meshes is enabled. A custom mesh  name can be given in the custom_mesh_name argument.\n\nArguments\n\ntess_path::String=Nothing: Path to the tesselation file.\nmeshing::Dict=Dict(): Dictionary containg the meshing parameters.\ncustom_mesh_name::String=Nothing: Custom given mesh name.\nforce::Bool=false: Enables and disables overwriting of meshes.\n\n\n\n\n\n","category":"function"},{"location":"API/#NeperStructureGenerator.tesselate","page":"API","title":"NeperStructureGenerator.tesselate","text":"tesselate(; base_name::String = \"crystal\", parent_folder::String = pwd(), \n            tesselation::Dict = Dict())\n\nCreates a tesselation with the respective orientation file according to the tesselation  parameters. Returns the path to the created tesselation file.\n\nArguments\n\nbase_name::String=\"crystal\": Name of the tesselation and orientation file.\nparent_folder::String=pwd(): Root directory.\ntesselation::Dict=Dict(): Dictionary containg the tesselation parameters.\n\n\n\n\n\n","category":"function"},{"location":"API/#NeperStructureGenerator.visualize_directory","page":"API","title":"NeperStructureGenerator.visualize_directory","text":"visualize_directory(output_dir::String, visualization_dir::String)\n\nCreates visualizations for the tesselation and all meshes within the visualization_dir  directory and saves it to the output_dir directory.\n\n\n\n\n\n","category":"function"},{"location":"API/#NeperStructureGenerator.visualize_mesh","page":"API","title":"NeperStructureGenerator.visualize_mesh","text":"visualize_mesh(output_dir::String, mesh_path::String; mesh_name::String = Nothing)\n\nCreates a visualization for the specified mesh and saves it to  the output_dir directory.\n\nProvide a path to a mesh file or a tesselation directory and a mesh name in order to visualize a mesh.\n\nArguments\n\noutput_dir::String: Path to directory for saving visualizations.\nmesh_path::String: Path to the mesh file or directory containing the mesh.\nmesh_name::String: Name of the mesh to visualize, if mesh_path is a directory.\nall::Bool=false: Non public argument if all meshes should be visualized.\n\n\n\n\n\n","category":"function"},{"location":"API/#NeperStructureGenerator.visualize_tesselation","page":"API","title":"NeperStructureGenerator.visualize_tesselation","text":"visualize_tesselation(output_dir::String, tess_path::String)\n\nCreates a visualizations for the specified tesselation and saves it to  the output_dir directory.\n\nArguments\n\noutput_dir::String: Path to directory for saving visualizations.\ntess_path::String: Path to the tesselation file or directory containing the tesselation.\n\n\n\n\n\n","category":"function"}]
}
